<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Test" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildThisFileDirectory)\Common.Build.Settings" />

  <ItemGroup>
    <Projects Include="$(SolutionDir)src\signalrclientdll\Build\VS2013\signalrclientdll.vcxproj" />
  </ItemGroup>

  <ItemGroup>
    <TestProjects Include="$(SolutionDir)src\signalrclient\Build\VS2013\signalrclient.vcxproj" />
    <TestProjects Include="$(SolutionDir)test\signalrclienttests\Build\VS2013\signalrclienttests.vcxproj" />
    <TestProjects Include="$(SolutionDir)test\signalrclient-e2e-tests\Build\VS2013\signalrclient-e2e-tests.vcxproj" />
  </ItemGroup>
  
  <ItemGroup>
    <TestHostProjects Include="$(SolutionDir)test\signalrclient-testhost\signalrclient-testhost.csproj" />
  </ItemGroup>

  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />

  <Target Name="Build">
    <MSBuild Targets="RestorePackages" Projects="@(Projects)" />

    <MSBuild Targets="$(BuildTargets)"
      Projects="@(Projects)"
      Properties="Configuration=$(Configuration);Platform=$(Platform);PlatformToolset=$(PlatformToolset)" />

    <MSBuild Targets="$(BuildTargets)"
      Projects="@(TestProjects)"
      Properties="Configuration=$(Configuration);Platform=$(Platform);PlatformToolset=$(PlatformToolset)" />
      
    <MSBuild Targets="$(BuildTargets)"
      Projects="@(TestHostProjects)"
      Properties="Configuration=$(Configuration)" />
  </Target>

  <Target Name="Clean">
    <MSBuild Targets="Clean"
      Projects="@(Projects)" />
    <MSBuild Targets="Clean"
      Projects="@(TestProjects)" />
    <MSBuild Targets="Clean"
      Projects="@(TestHostProjects)" />
  </Target>

  <Target Name="Rebuild">
    <MSBuild Targets="Clean;Build"
      Projects="$(MSBuildProjectFile)"
      Properties="BuildTargets=Rebuild;Configuration=$(Configuration);Platform=$(Platform);PlatformToolset=$(PlatformToolset)"/>
  </Target>

  <Target Name="Test" DependsOnTargets="Build">
    <Exec Command="$(OutDir)\signalrclienttests.exe --gtest_output=xml:$(OutDir)\test_results.xml" />
    <ExecAsync Executable="$(SolutionDir)test\signalrclient-testhost\bin\debug\signalrclient-testhost.exe" Arguments="60000" />
    <Exec Command="$(OutDir)\signalrclient-e2e-tests.exe --gtest_output=xml:$(OutDir)\e2e_test_results.xml" />
  </Target>

  <Import Project="Config.Definitions.Props" />

  <Target Name="CreatePackage">
    <PropertyGroup>
      <PackageSource>$(SolutionDir)bin\Package\</PackageSource>
      <PackageSourceNative>$(SolutionDir)bin\Package\build\native\</PackageSourceNative>
      <NuGetArtifactsPath>$(MSBuildThisFileDirectory)..\NuGet\</NuGetArtifactsPath>
      <NuSpecPath>$(NuGetArtifactsPath)signalrclientcpp.nuspec</NuSpecPath>
      <PackageOutputDir>$(SolutionDir)artifacts\build</PackageOutputDir>
    </PropertyGroup>

    <ItemGroup>
        <Include Include="$(SolutionDir)include\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(Include)" DestinationFolder="$(PackageSourceNative)include\%(RecursiveDir)" />
    <Copy SourceFiles="$(NuSpecPath)" DestinationFolder="$(PackageSource)" />
    <Copy SourceFiles="$(NuGetArtifactsPath)Microsoft.AspNet.SignalR.Client.Cpp.targets" DestinationFolder="$(PackageSourceNative)" />

    <MSBuild Targets="RestorePackages" Projects="@(Projects)" />

    <MSBuild Targets="BuildForNuget"
      Projects="$(MSBuildThisFile)"
      Properties="PackageSourceNative=$(PackageSourceNative);Configuration=%(ProjectConfiguration.Configuration);Platform=%(ProjectConfiguration.Platform);PlatformToolset=$(PlatformToolset);SignalrClientTargetName=$(SignalrClientTargetName)" />

    <MakeDir Directories="$(PackageOutputDir)" />
    <Exec Command="$(NuGetCommand) pack $(NuSpecPath) -BasePath $(PackageSource) -OutputDirectory $(PackageOutputDir) -Version $(SignalRClientCppVersionString)" LogStandardErrorAsError="true" />
  </Target>

  <Target Name="BuildForNuget">
    <MSBuild Targets="$(BuildTargets)"
      Projects="@(Projects)"
      Properties="Configuration=$(Configuration);Platform=$(Platform);PlatformToolset=$(PlatformToolset)" />

    <Copy SourceFiles="$(OutputPath)dll\$(SignalrClientTargetName).lib" DestinationFolder="$(PackageSourceNative)lib\$(Platform)\$(PlatformToolset)\$(Configuration)" />
    <Copy SourceFiles="$(OutputPath)dll\$(SignalrClientTargetName).dll" DestinationFolder="$(PackageSourceNative)dll\$(Platform)\$(PlatformToolset)\$(Configuration)" />
    <Copy SourceFiles="$(OutputPath)dll\$(SignalrClientTargetName).pub.pdb" DestinationFiles="$(PackageSourceNative)dll\$(Platform)\$(PlatformToolset)\$(Configuration)\$(SignalrClientTargetName).pdb" />
  </Target>

  <UsingTask TaskName="ExecAsync" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Executable ParameterType="System.String" Required="true" />
      <Arguments ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Diagnostics" />
      <Code Type="Fragment" Language="cs">
      <![CDATA[
        Log.LogMessage("Executable {0}...", Executable);
        var name = System.IO.Path.GetFileNameWithoutExtension(Executable);
        Log.LogMessage("Starting {0}...", name);
        var processStartInfo = new ProcessStartInfo(Executable, Arguments) { UseShellExecute = true  };
        Process.Start(processStartInfo);
        Log.LogMessage("Finished starting process {0}.", name);
      ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
